:PROPERTIES:
:ID:       3ac2b9bb-1085-48e4-a97b-70a5a3849141
:END:
#+title: 2023

* SWE qualications
** Must have
- BS or above in Computer Science, Software Engineering, or a related fields (PhD is preferred)
- Good communication, teamwork skills (English must be fluent)
- Superior design, debugging, and problem solving in C/C++ and Python
- Deep experience (solid knowledge) in Probability and Statistics, Linear algebra, Data structures and Algorithms, Computer vision, Computer graphic, Machine learning, Deep learning and building ML/DL infrastructure at scale (in production)
- Deep experience in ML and big data frameworks
- Deep experience in optimization and acceleration of computer vision and graphic algorithms
- Proficient in C/C++, Python, Go, and Linux
** Nice to have
- Proficient in Go, SQL, CI/CD tools
- Author of published papers in top conferences
- Winner of competitions in algorithms, machine learning, deep learning (Kaggle) -> It's too hard right now

* Goals
- IELTS 6.5 (no band under 6.0)
- Have a fulltime job (as data scientist, machine learning engineer, algorithm engineer) in top tier companies: /WorldQuant/, /DytechLab/, /Axon/, /Anduin Transaction/, /NAB/, /Line, Naver/, and /VinAI/, /VinBigData/ (for ML jobs only)
- Become CP constestant LeetCode (top 2%), Codeforces (1600 MMR), AtCoder
- Tech stack: C/C++, Python, JavaScript/TypeScript and ML libraries, tools, MLOps

* TODO
** Reading books
*** Mathematics
- probability and statistics
*** Machine learning / Deep learning
- the elements of statistical learning
- machine learning: a probability perspective
- probabilistic machine learning: introduction & advanced (download updated versions at https://probml.github.io/pml-book/)
- deep learning
- understanding deep learning
*** Computer science
- introduction to algorithms (CLRS)
- the algorithm design manual
- [[https://cp-algorithms.com/]]
- [[https://en.algorithmica.org/hpc/]]
- operating system: internals and design principles
- computer systems: a programmer's perspective
*** Engineering
- designing data-intensive applications
- [[https://java-design-patterns.com/]]
- [[https://use-the-index-luke.com]]
